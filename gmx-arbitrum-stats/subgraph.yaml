specVersion: 0.0.4
description: EDDX
#repository: https://github.com/eddx-io/eddx-subgraph
schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: base-testnet
    source:
      address: "0xf8340046E11672610532bc2F7554241ceE118fB7"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: base-testnet
    source:
      address: "0xeEF0ee34696a7982b8AE27c67f91f364D91967a0"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorLINK
    network: base-testnet
    source:
      address: "0x15608A8A3E2f65e00fe0ef2C9c78Ada4e4E8172E"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedLINK
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorDAI
    network: base-testnet
    source:
      address: "0x31e499777A3c68cBf86C99236197870C362bDC2c"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedDAI
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorUSDC
    network: base-testnet
    source:
      address: "0x83Eb07416dAbDB3DE6b12a8FA63F372773814445"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedUSDC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorUSDT
    network: base-testnet
    source:
      address: "0x719ddaE0b2506064AeA750f3cca50cF944b15463"
      abi: ChainlinkAggregator
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedUSDT
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ElpManager
    network: base-testnet
    source:
      address: "0x1379acfCD7e4AD52A06560F694DCeB5D442EBe1A"
      abi: ElpManager
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - HourlyElpStat
      abis:
        - name: ElpManager
          file: ./abis/ElpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: OrderBook
    network: base-testnet
    source:
      address: "0x9Aee9917A0E7D6fCe32751D7F93e9fB1658dD16D"
      abi: OrderBook
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder

        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder

        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
      file: ./src/ordersMapping.ts

  - kind: ethereum/contract
    name: FastPriceFeed
    network: base-testnet
    source:
      address: "0x1aC4d5F83ef11bEA355bAad28AfeA0EF50250aaC"
      abi: FastPriceFeed
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceFeed
          file: ./abis/FastPriceFeed.json
      eventHandlers:
        - event: PriceData(address,uint256,uint256,uint256,uint256)
          handler: handleSetPrice
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FastPriceEvents
    network: base-testnet
    source:
      address: "0x6f0c6F4d351bd1df124ED1f6442D1ca2faB2f49a"
      abi: FastPriceEvents
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handlePriceUpdate
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: UniswapPool
    network: base-testnet
    source:
      address: "0x6F11D6FA55f548571D7854360B564722043D3E34"
      abi: UniswapPoolV3
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UniswapPrice
      abis:
        - name: UniswapPoolV3
          file: ./abis/UniswapPoolV3.json
      eventHandlers:
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleUniswapEddxEthSwap
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FeeEddxRewardDistributor
    network: base-testnet
    source:
      address: "0x61D53C170Bc991C13e0763dC6da95eAEE92D6a32"
      abi: RewardDistributor
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - EddxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToEddx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EseddxEDDXRewardDistributor
    network: base-testnet
    source:
      address: "0x141Fa2311A62f6d8a53154277eDF79beCd9c51F2"
      abi: RewardDistributor
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - EddxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEseddxToEddx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: FeeElpRewardDistributor
    network: base-testnet
    source:
      address: "0x24338f7a8d48E81F2A0DB40E2e439B915d4Cd14a"
      abi: RewardDistributor
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - EddxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToElp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EseddxElpRewardDistributor
    network: base-testnet
    source:
      address: "0x67F1E16a4E2a46Ef9136AAcCaeC509efc584D27B"
      abi: RewardDistributor
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - EddxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEseddxToElp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: Vault2
    network: base-testnet
    source:
      address: "0x74cCDFcff6CbE68ecD1eb21a23243D217601F4C0"
      abi: Vault
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TradingStat
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: ./src/tradingMapping.ts

  - kind: ethereum/contract
    name: Vault
    network: base-testnet
    source:
      address: "0x74cCDFcff6CbE68ecD1eb21a23243D217601F4C0"
      abi: Vault
      startBlock: 4998000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Swap
        - IncreasePosition
        - DecreasePosition
        - HourlyVolume
        - HourlyVolumeBySource
        - HourlyVolumeByToken
        - HourlyFee
        - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      # callHandlers: # doesn't work on Arbitrum
      #   - function: setTokenConfig(address,uint256,uint256,uint256,uint256,bool,bool)
      #     handler: handleSetTokenConfig
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleUpdatePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
      file: ./src/mapping.ts
